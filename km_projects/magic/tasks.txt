Оглавление

	Общая инфа

	Смена шаблона у Вид/Подвид refs #16647

Общая инфа

	В magic хранится дополнительная информация по товару, которая не должна храниться в 1С (в т.ч. карточки товаров)

Смена шаблона у Вид/Подвид refs #16647

	На 28.02.2019 работает так

		Есть карточка товара, модель ProductCard.

		В карточке товара находится полное описание товара.

		У карточки товара есть вид-тип (ноутбук-ультрабук), модель Kind.

		У вида-типа есть шаблон, модель Template. Для связи шаблона с видом-типом используется модель Property.

		У шаблона есть атрибуты, модель TemplateEntry. Этот набор атрибутов нужен для того, чтобы было понятно, какие атрибуты имеет карточка товара.

		Карточка товара имеет значения атрибутов. Смотреть модели Attribute, AttributeOptions, AttributeOptionValue.

		Значения атрибутов для карточки добавляет пользователь после создания карточки товара, при её редактировании.

		Пользователь может изменить шаблон для вида-типа в 1С и в magic (раздел "Свойства").

		Когда пользователь меняет шаблон у вида-типа в magic (раздел "Свойства"), то весь набор атрибутов у карточки товара тоже меняется. Потому что вид-тип привязан к карточке товара. Соответсвенно это приводит к тому, что все значения атрибутов карточки товара теряются.

	Варианты работы от Глубокова

		1. Когда в 1С заведен новый вид-тип в данном случае ничего не надо делать, т.к. у нового вида-типа, нет никакого шаблона.

		2. Смена шаблона в magic

			пример: http://magic.km-union.ru/cards/property/56/change/?_changelist_filters=q%3D%25D0%25BD%25D0%25BE%25D1%2583%25D1%2582

			Случай, когда я меняю привязку шаблона, к определенному виду-типу.

			В данном случае, должно пройти сравнение нового и старого шаблона, проверка всех совпадающих значений атрибутов, а по не совпадающим, приходило бы уведомление, по каким не прошла проверка.

		3. Переименовывание вид/подвид в 1С

			Тут надо ответ от вас, что произойдет в данному случае?

			Появится в magic, новая связка вид-тип или поменяется уже существующая, с сохранением привязки шаблона и карточек товара!

				Судя по коду появится новая связка вид-тип - (modules/cards/tasks.py/def sync_kinds)

			Если это второй случай, то должны пройти все те же процедуры, что описаны во втором пункте.

			Для 2 и 3 пункта, если поменялся шаблон, то карточки товаром, которые переподтвердились автоматически, им так же должен быть обновлен слепок на обоих сайтах.

	Шаблон и его атрибуты

		TemplateAdmin -> add_to_group_json -> template.groups.create(position=position, parent=group, options=attribute) - привязка атрибута к шаблону, пишется TemplateEntry

	Задача

		При смене шаблона у вида-типа в magic и/или 1С нужно:

			значения совпадающих атрибутов сохранялись 

			карточки товара у которых изменился шаблон помечались, как не актуальные

			администратор получал уведомление о смене шаблонов у карточек товара

				текст письма при смене шаблона, должен содержать: код карточки товара (должны быть кликабельным), имя карточки товара, смена шаблона "с/на" какой (должны быть кликабельными), несовпавщие атрибуты

		Когда шаблон меняется в 1С magic узнает об этом в момент синхронизации. Смотреть задачу check_kind_id_in_cards в modules/cards/tasks.py 

	Отображение атрибутов карточки товара

		Все поля формы берутся через метод get_preview_template_fields модели Kind и добавляются в методе get_form класса ProductCardAdmin.

		    try:
                template = obj.kind.template
            except Template.DoesNotExist:
                return form

            if template:
                form.base_fields.update(template.get_fields(obj))

    Тесты

    	пока работают с дефолтной базой и приложениями:

    		'admin_tools',
		    'admin_tools.theming',
		    'admin_tools.menu',
		    'admin_tools.dashboard',
		    'django.contrib.auth',
		    'django.contrib.contenttypes',
		    'django.contrib.sessions',
		    'django.contrib.sites',
		    'django.contrib.messages',
		    'django.contrib.staticfiles',
		    'django.contrib.humanize',
		    'django.contrib.admin',
		    'gunicorn',
		    'catalog',
		    'ones',
		    'cards',
		    'online_shopping',

-----------------------------------------------------------------

        kind = Kind.objects.create(
            kind=u'Xnj',
            type=u'Xnj',
            worker=User.objects.get(username='admin')
        )
        AttributeOptions.objects.bulk_create([
            AttributeOptions(
                name=u'Тактовая частота процессора, МГц',
                type='I'
            ),
            AttributeOptions(name=u'Кол-во ядер процессора', type='I'),
            AttributeOptions(name=u'Название ядра процессора', type='S'),
            AttributeOptions(name=u'Частота шины CPU, МГц', type='S')
        ])

        # после того, как заработают тесты поменять на .all()
        attr_queryset = AttributeOptions.objects.order_by('-pk')[:4]
        template_old = Template.objects.create()
        template_entry_old = self.create_template(template=template_old)
        self.add_attrs(
            attr_list=attr_queryset[0:2],
            template=template_old,
            template_entry=template_entry_old
        )
        template_new = Template.objects.create()
        template_entry_new = self.create_template(template=template_new)
        self.add_attrs(
            attr_list=attr_queryset[1:4],
            template=template_new,
            template_entry=template_entry_new
        )

        Property.objects.create(
            kind=kind,
            template=template_old
        )
        product_card = ProductCard.objects.create(
            code=23,
            is_ready=True,
            is_checked=True,
            is_actual=True,
            kind=kind,
        )
        Attribute.objects.bulk_create([
            Attribute(
                value_text='100',
                card=product_card,
                options=attr_queryset[0]
            ),
            Attribute(
                value_text='150',
                card=product_card,
                options=attr_queryset[1]
            )
        ])

        product_card_list = ProductCard.objects.filter(
            # kind__in=[kind.pk]
            kind__in = ['1761', '1756']
        )
        attr_value_helper = AttrValueHelper()
        attr_value_helper.transfer_attr_values(
            template_old=template_old,
            template_new=template_new,
            product_card_list=product_card_list
        )
        # проверить, что удалился атрибут старого шаблона
        # что сохранились атрибуты старого шаблона, которые совпадают
        # что продукт стал не актуальным

    def create_template(self, template):
        return TemplateEntry.objects.create(
            template=template,
            name='Основные характеристики',
        )

    def add_attrs(self, attr_list, template, template_entry):
        template_entry_list = []
        for attr in attr_list:
            template_entry_list.append(
                TemplateEntry(
                    template=template,
                    name='',
                    options=attr,
                    parent=template_entry,
                )
            )
        return TemplateEntry.objects.bulk_create(template_entry_list)