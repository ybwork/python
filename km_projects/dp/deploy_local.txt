!!! Если выполнить миграции, то дамп не заливается

Получение проекта

	Берем код проекта с gitlab - git clone project_link

Открываем проект в pycharm

Окружение и зависимости

	автоматическое создание (пока нет)

		chmod +x local_deploy.sh

		./local_deploy.sh

	ручное создание

		python create_bootstrap.py

		должен появиться bootstrap.py

		python bootstrap.py

		должно создасться виртуальное окружение dealer_price-env

		должна появиться директория bin

		bin/pip install -r requirements.txt

			вывалит ошибку и вопрос "Could not find function xmlCheckVersion in library libxml2. Is libxml2 installed?"

			Решается так: sudo apt-get install libxml2-dev libxslt-dev python-dev

			После этого еще раз запускаем bin/pip install -r requirements.txt

		Переходим в имя_проекта/conf, открываем файл settings_local.py.template, копируем все

		В имя_проекта/conf созаем файл settings_local.py и вставляем все скопированное из settings_local.py.template

Устанавливаем нужные версии субд в docker контейнерах

	Должен быть установлен docker server

	postgresql

		Создаем директории на локальной машине от имени суперпользователя (sudo mkdir):

			~/work/docker/volumes/postgres_9.5/config

			~/work/docker/volumes/postgres_9.5/data

		sudo docker run \
		--name postgres_9.5 \
		-v ~/work/docker/volumes/postgres_9.5/config:/etc/postgresql \
		-v ~/work/docker/volumes/postgres_9.5/data:/var/lib/postgresql/data \
		-p 5432:5432 -e POSTGRES_PASSWORD=asdf1234 -d postgres:9.5

	mysql

		Создаем директории (mkdir):

			~/work/docker/volumes/mysql_5.7/config

			~/work/docker/volumes/mysql_5.7/data

		sudo docker run \
		--name mysql_5.7 \
		-v ~/work/docker/volumes/mysql_5.7/config:/etc/mysql/conf.d \
		-v ~/work/docker/volumes/mysql_5.7/data:/var/lib/mysql \
		-p 3306:3306 \
		-e MYSQL_ROOT_PASSWORD=asdf1234 \
		-d mysql:5.7

	Redis

		Должен быть установлен radis.

		sudo docker run --name redis -p 6379:6379 -d redis

Дамп бд

	Mysql

		Лучше делать через mysql workbench

	Postgresql

		При заливки дампов может быть ошибка:

			pg_restore: [archiver (db)] could not execute query: ERROR:  role "dealer_price" does not exist

		Решение: 

			создаем роль dealer_price и заливаем заново

		Удостовериться, что в базе magic (mysql) есть таблица django_site со значениями (1, example.com, example.com)

Для работы с mysql

	sudo apt-get update

	sudo apt-get install python-mysqldb

	sudo apt-get install libmysqlclient-dev

	В env

		pip install mysqlclient

Запуск

	Создали суперпользователя

		bin/manage createsuperuser

	Открыли http://0.0.0.0:8000

	Он сделал редирект на http://0.0.0.0:8000/no_site/

	Вместо no_site ввели dpa нажали enter

	В интерфейсе админа выбрали "Users"

	Через поиск нашли себя

	Нажали на имя и зашли во внутрь

	Нашли в самом низу поле "Связь с другими дилерами" и переместили всех диллеров слева в право

	Нажали сохранить

Rabbit

	Должен быть установлен rabbitmq.

	Удостовериться, что settings_local.py имеет:

		BROKER_URL = [
		    # Важно, чтобы на локальной машине было подключение к локальному rabbit-у,
		    # чтобы не отправить задачи в боевой
		    "amqp://guest:guest@localhost:5672/dp"
		]

		BROKER_TARGET_URL = [
		    # Важно, чтобы на dev был localhost
		    "amqp://guest:guest@localhost:5672/broker"
		]

		guest:guest - это логин и пароль от rabbit

		/magic и /broker - это имена виртуальных хостов rabbit-а, которые должны быть созданы:

			через web морду идем в Admin -> Virtual Hosts -> Add virtual host

	Все существующие очереди можно посмотреть в settings.py -> CELERY_QUEUES

Celery

    Для запуска пишем в консоль: 
	
		celery -A app_celery worker -l info -Q default,sync,upload,events,dealers_sync,notification,online_store,km_client,main_domain_prices_sync,ones_actions,km_client_buffer --purge