Оглавление

	Установка языка

	Создание виртуального окружения

	Установка зависимостей

	Создание проекта

	Создание приложения

	Cтягивание существующего проекта

	Создание миграций

	Выполнение миграций

	Откат миграций

	Заливка дампа

	Запуск проекта

Установка языка

	sudo apt-get update

	sudo apt-get install -y python3-pip

	python3 -V

Работа с виртуальным окружением

	sudo pip install virtualenv - устанавливаем глобально

	virtualenv --version - показывает версию

	virtualenv name_venv - создает новое виртуальное окружение (в текущей директории)

	virtualenv --python=/usr/bin/python2.7 name_venv - создаёт виртуальное окружение, с указанной версией питона

	. name_venv/bin/activate - запуск виртуального окружения

	deactivate - выключает окружение

Установка зависимостей
		
	Переходим в корневую директорию проекта.

	В ней должен быть файл requrements.txt

	Если его нет, то pip freeze > requirements.txt

	Если есть, то pip install -r requirements.txt

Создание проекта

	pip install django

	django-admin startproject mysite

Создание приложения

	Переходим в директорию с файлом manage.py

	python manage.py startapp news

	Открываем settings.py

	Добавляем в INSTALLED_APPS имя созданного приложения, то есть 'news'

Cтягивание существующего проекта

	git clone link_on_project_from_gitlab

Создание миграций

	В каждом приложении есть файл models.py

	В этом файле мы описываем структуру данных приложения.

	После того, как мы описали структуру мы можем создавать миграции.

	./manage.py makemigrations name_app - создаёт миграции

	./manage.py makemigrations name_app --name name_migration - создает именнованную миграцию (удобно в случае если нужно откатить какую-либо миграцию)

	./manage.py showmigrations - выводит все существующие

Выполнение миграций

	./manage.py migrate

Откат миграций

	При откате теряются данные таблиц, которые откатываются.

Запуск проекта

	python manage.py runserver

	./manage.py runserver

	./manage.py runserver 0.0.0.0:8000