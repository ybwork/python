Оглавление

	Что это

	Из чего состоит паттерн

	Зачем знать паттерны

	Классификация паттернов

	Порождающие

	Фабричный метод

	Одиночка

Что это

	Паттерн проектирования - это часто встречающееся решение определённой проблемы при проектировании архитектуры программ.

	Паттерн представляет собой не какой-то конкретный код, а общую концепцию решения той или иной проблемы, которую нужно будет ещё подстроить под нужды вашей программы.

Из чего состоит паттерн

	Паттерн состоит из:

		проблемы, которую он решает

		способ решения проблемы

		структуры классов, составляющих решение

Зачем знать паттерны

	Проверенные решения.

	Делается меньше просчётов при проектировании, так как все скрытые проблемы в них уже давно найдены.

	Общий программистский словарь.

Классификация паттернов

	Порождающие

	Структурные

	Поведенческие

Порождающие

	Отвечают за создание объектов.

	Список: фабричный метод, абстрактная фабрика, строитель, прототип, одиночка.

Фабричный метод

		

Одиночка

	Этот паттерн гарантирует, что у класса есть только один экземпляр, и предоставляет к нему глобальную точку доступа.

	Чаще всего это полезно для доступа к какому-то общему ресурсу, например, базе данных, чтобы не открывать каждый раз новое соединение.

	Использовать, когда должен быть единственный экземпляр какого-то класса, доступный всем.

	Одиночка скрывает от клиентов все способы создания нового объекта, кроме специального статического метода. Этот метод либо создаёт объект, либо отдаёт существующий объект, если он уже был создан.

	Пример:

		class App:
		    __instance = None

		    @staticmethod
		    def get_instance():
		        if App.__instance is None:
		            App.__instance = App()
		        return App.__instance


		print(App.get_instance(), App.get_instance())

	В отличие от глобальных переменных, Одиночка гарантирует, что никакой другой код не заменит созданный экземпляр класса.



