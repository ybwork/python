Оглавление

	Что это

	Общие понятия

	Что и где находится

	Репозитории

	Пакеты

	Менеджер пакетов

	Man

	GRUB

	Midnight Commander

	Полезные утилиты

	Создание исполняемого файла

	Команды

	Часто используемые команды

	Группировка команд

	Конвейер

Что это

	Linux - это операционная система на базе ядра Linux, которая включает в себя набор утилит и программ проекта GNU.

	Разработал Линус Торвальдс в 1991 году.

	Linux-системы распространяются в основном бесплатно в виде различных дистрибутивов.
	
Обшие понятия

	Утилита - это вспомогательная компьютерная программа, которая выполняет типовую задачу связанную с работой оборудования и операционной системы.

	Дистрибутив - это операционная система, использующая ядро Linux.

	Сервисы - это процессы, которые работают в невидимом режиме (фоновом) и сохраняющих работоспособность системы в целом.

	GNOME - свободная среда рабочего стола для UNIX-подобных операционных систем.

	CLI - интерфейс командной строки

	Мейнфрейм - большой универсальный высокопроизводительный отказоустойчивый сервер со значительными ресурсами ввода-вывода, большим объёмом оперативной и внешней памяти, предназначенный для использования в критически важных системах.

	В операционной системе Linux есть такое понятие как «все есть файл». Вот и все устройства в ней рассматриваются как определенные файлы. У каждого устройства есть свой файл. Если объяснить грубо, то это выглядит примерно так: двигаем мышкой → информация, поступающая с мышки, отправляется в этот файл → а операционная система считывает данные из этого файла и передвигает курсор на экране.

	При установке программ в Linux используются два основных способа: с помощью пакетов или из исходных кодов.

Что и где находится

	/ - самая главная директория или корневой каталог

	root - главный каталог, содержит файлы суперпользователя (не находится в /home/root, потому что home может испортиться и востановление системы будет невозможно)

	sbin - содержит файлы, которые используются root-пользователем

	bin - содержит исполняемые файлы, без которых не может обойтись ОС Linux

	boot - содерижт загрузчик операционной системы

	etc - содержит различные настройки операционной системы

	home - место хранения пользовательских файлов

	lib - содержит различные системные библиотеки

	lost+found - содержит потерянные фрагменты файлов

	media - содержит различные подключенные накопители cd-диски, dvd-диски и usb накопители

	mnt - содержит подключенные фаловые системы

	usr - содержит установленные программы, которые получены из репозитория

	opt - содержит установленные программы, которые получены не из репозитория, а из других мест

	proc - содержит различные файлы с системной информацией, например процессы запущенные на данный момент и т.д. (файлы создаются каждый раз при загрузке операционной системы)

	srv - содержит только данные различных сервисов

	sys - содержит различные средства для управления настройками и конфигурациями системы

	tmp - содержит различные временные файлы

	var - содержит различные логи и кеши файлов

Репозитории

	Репозитории - это сервера-хранилища, где находятся специальные файлы, в которых содержатся программы и необходимые библиотеки.

	Программы и обновления в linux устанавливаются преимущественно из репозиториев.

	Например большая часть ПО в ubuntu запакована в специальные .deb файлы.

	Пользовательские компьютеры подключаются к репозиториям по сети или через интернет и при помощи специальных утилит (таких как Synaptic) позволяют увидеть, какие пакеты установлены, а какие доступны для установки.

	В свежеустановленной Ubuntu уже подключены необходимые репозитории, однако никто не запрещает вам использовать другие, сторонние репозитории.

	Для того, чтобы использовать другой репозиторий его нужно подключить

		sudo apt-add-repository ppa:ripps818/coreavc

	Далее следует обновить список пакетов

		sudo apt-get update

Пакеты 

	Пакеты - это программное обеспечение, которое уже готово к установке при помощи соответствующей команды.

	Пакет содержит собранную программу, информацию о том, какие требуется совершить действия для ее установки, информацию о зависимостях, а также дополнительные данные.

	За установку, удаление и обновление пакетов отвечает менеджер пакетов.

Менеджер пакетов

	Менеджер пакетов - это программа, которая позволяет устанавливать, обновлять, удалять, настраивать пакеты linux.

Man

	Man - это команда Unix, предназначенная, которая выводит, справочное руководство по какой-либо команде.

GRUB

	GRUB - это загрузчик операционной системы.

Midnight Commander 

	Midnight Commander - это консольный файловый менеджер.

Полезные утилиты

	w - выводит список вошедших в систему пользователей и исполняемых ими процессов

	NMON - показывает информацию о производительности системы

	NCDU - используется для анализа дискового пространства, занимаемого различными каталогами

	FINDMNT - используется для поиска примонтированных файловых систем

	DSTAT - использутеся для мониторинга памяти, процессора, производительности, сети или дискового пространства

	SAIDER - использутеся для сбора статистики о системе

	SS - использутеся для сбора статистики о соединениях

	CCZE - инструмент для красивого вывода логов

	RANWHEN.PY - утилита, отображающая графически активность системы

	slurm - инструмент для мониторинга сетевых интерфейсов

	GParted - программа для редактирования разделов жесткого диска

	GdMap - показывает занятое на диске пространство

	StartUp-Manager - графическая оболочка для конфигурирования Grub

	VirtualBox - программа для виртуализации операционных систем, позволяет устанавливать и загружать к примеру ОС Windows, не выходя из Linux
	
Создание исполняемого файла

	sudo cd /etc/init.d

	sudo nano script_name.sh

	внутри скрипта:
		#!/bin/bash
		код скрипта

	sh script_name.sh - проверили скрипт на работоспособность

	sudo chmod +x /etc/init.d/script_name.sh - делает файл исполняемым

	sudo update-rc.d script defaults 90 - добавляет файл к автозагрузке

	reboot - перезапуск системы

Команды

	sudo apt list --installed - выводит список установленных пакетов

	ctrl + shift + f - открывает окно для поиска по терминалу

	sudo apt-get update - получить обновлённые списки пакетов

	sudo apt-get install package_name if_need_version - установка нового пакета

	sudo apt-get remove package_name - удаление пакета

	touch file.txt - создает файл

	ls - смотреть, что в директории

	ls -a - смотреть, что в директории (в том числе и скрытое)

	ls -l - показывает структуру каталога с владельцем каждого файла

	sudo nano file_name - открытие файла для редактирования в терминале

	cat file_name.txt - показывает содержимое файла

	./file.txt - выполняет файл

	zip -r folder.zip ./ - запаковать текущую папку с подпапками в zip-архив folder.zip

	unzip ./folder.zip -d ./folder - распаковать архив в папку folder

	rm -rf folder_name - удалить директорию

	rm -f file_name - удаляет файл

	ls -a ~/ - просмотр скрытых файлов

	pwd - показывает имя текущей директории

	mkdir name_dir - создаёт директорию

	ifconfig - выводит ip машины (обычно находится в разделе enp3s0, после слова inet), если система debian нужно установить net-tools

	sudo -H - помогает в том случае, когда нет прав на директорию при установки пакета

	chmod 775 /opt/lampp/htdocs - даёт доступ на указанную директория и файлы в ней

 	sudo chown -R $USER:$USER . - позволяет сменить владельца файлов в текущей директории

 	find ~/ -type f -name "file_name" - ищет файл

 	---------

 	sudo kill 7925 - убивает процесс, (7925 это вторая колонка в выводе всех процессов сервиса)

 	ps -ef | grep service_name - находит все процессы конкретного сервиса

 	ps -ef - выводит все процессы

 	---------

 	adduser user_name - создаёт пользователя в системе

 	cut -d: -f1 /etc/passwd - выводит список пользователей в системе

 	ls -l dir_name - проверяем доступ к директории

 	mv /home/user/oldname /home/user/newname - переименовывает директорию

 	mv old_file_name.conf new_file_name.conf - переименовывает файл

 	lsb_release -a - выводит версию системы

 	ping localhost - пингует сервер (если он не доступен, пишет Name or service not known)

 	\ - перенос строки в консоли

 	sudo dpkg -i имя_пакета - устанавливает deb пакет

 	ssh devel@cdn2.km-union.ru - установка соединения по ssh

 		для работы нужно создать ssh ключ и отправить его админу, чтобы он установил его на машине к которой идет подключение

 		результатом успешного подключения будет:

 			переключение слева в терминале с пользователя системы на пользователя той машины к которой подключаемся (с ilya@ilya: на devel@lin-web-cdn2:)

 			Warning: Permanently added 'cdn2.km-union.ru,10.10.100.5' (ECDSA) to the list of known hosts.
			Welcome to Ubuntu 16.04 LTS (GNU/Linux 4.4.0-51-generic x86_64)

			 * Documentation:  https://help.ubuntu.com/

			95 packages can be updated.
			7 updates are security updates.

			New release '18.04.2 LTS' available.
			Run 'do-release-upgrade' to upgrade to it.


			Last login: Mon Feb 18 10:31:11 2019 from 10.10.54.50

	 tar -xvf имя_архива.tar.gz - извлекает файл из архива

	cp ~/Pictures/3.png ~/Pictures/4.png ~/Downloads/imgs/ - копирует что-либо из одной директории в другую, ~/Pictures/3.png - это что копируется, ~/Downloads/imgs/ - это куда копируется

Часто используемые команды

	Работа с директориями

		cd folder_name/path_with_forlder_name/.. - изменяет текущую терминальную папку

	Работа от имени суперпользователя

		sudo command_name - дает возможность выполнить команду от имени суперпользователя, попросит пароль

		sudo su command_name - даст возможность выполнить команду от имени суперпользователя и все следующие команды будут исполняться от имени суперпользователя, пока не закроется терминал

	Работа с пакетами

		sudo apt install package_name - устанавливает нужный пакет

		sudo apt install package_name package_name package_name - устанавливает сразу несколько пакетов

		sudo apt-add-repository adress_repository - добавляет репозиторий

		sudo apt update без аргумента/package_name - обновляет индексы пакетов или выбранного пакета

		sudo apt upgrade без аргумента/package_name - обновляет пакеты или выбранный пакет (перед выполнением нужно обновить индексы пакетов)

		sudo apt remove package_name - удаляет пакет

		sudo apt purge package_name - удаляет пакет со всеми зависимостями

		sudo apt autoremove - удаляет все ненужные зависимости, бесхозные пакеты и прочий мусор

	Работа с терминалом

		clear - очищает окно терминала от всех сообщений

		history - отображает все недавно введённые команды

		man package_name/comand_name - отображает руководство по программам и командам Linux

	Работа с файлами

		cat - 

		mc - октрывает консольный файловый менеджер

	Управление процессами

		top - выводит инфу о процессах (в том числе и PID, сортирует в зависимости от потребления ресурсов CPU)

		kill PID_процесса - принудительно завершает процесс

		killall firefox - убивает процессы c определённым именем



Группировка команд

	Команды можно соединять в списки.

	Простейший вид списка - несколько команд, разделенных точкой с запятой:

		lpr myfile.txt ; lpq

	Команды в таком списке выполняются последовательно.

	Оболочка ждет завершения каждой команды, чтобы отправить на выполнение следующую (синхронный режим).

	В списки можно группировать не только одиночные команды, но и конвейеры:

		ps -ef | head -n 1; ps -ef | grep httpd

	Если требуется запустить команду на заднем плане и не ждать ее выполнения (асинхронный режим), то нужно завершить ее управляющим оператором &

		du --human-readable --total /home > diakusage.txt &

	Команды в списке можно соединять управляющими операторами && и || (и / или)

		cmd1 && cmd2 cmd3 || cmd4

		mkdir mydir && cd mydir

	Чтобы перенаправить в файл вывод всех команд из списка, нужно взять весь список в круглые скобки

		( date; free; who; ) > logfile

	Если нужно часто выполнять одну и ту же последовательность команд, можно оформить ее как функцию. В консоль:

		function morning_report {
		mkdir mydir;
		cd mydir;
		}

		morning_report

		Нельзя определять функцию и переменную с одинаковыми именами.

		Определенные вами переменные и функции действительны только для текущего сеанса работы в оболочке bash.

		Чтобы воспользоваться ими в следующем сеансе, запишите их в текстовый файл, а когда они понадобятся, загрузите этот файл в память командного интерпретатора встроенной командой source.

Конвейер

	Конвейер - это механизм объединения команд в группу.

	В отличие от списка команд, с помощью конвейра можно передавать данные от одной команды к другой.

	Команды в конвеере соединяются при помощи символа |, он же пайп.

	При связывании команд конвейером, вывод указанной команды слева становится вводом указанной команды справа.

		ls -l | nl

	В конвейер могут быть связаны и более двух команд. Вывод команды ls передается команде nl, а вывод nl передается команде sort -r

		ls -l | nl | sort -r

	Ввод (но не вывод) первой команды в конвейере может быть перенаправлен из файла посредством символа «<», а вывод (но не ввод) последней - перенаправлен в файл или в конец файла символами «>», «>>». 

	Перенаправлять стандартный ввод или вывод команд бывает полезно для вывода ошибок в файл.