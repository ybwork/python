Оглавление

	Как подходить к решению задачи

	Как подходить к исправлению ошибки

	Как составлять запрос

	Как выбирать иструмент

	Зачем нужны паттерны

Как подходить к решению задачи

	Понимаем задачу. Если могу описать её простыми словами, значит понял.

	Декомпозируем задачу, то есть разбиваем её на более мелкие подзадачи.

	Придумываем решение каждой подзадачи в рамках простых вещей (вспомнить пример с двумя телефонами и паузой).

	Выписываем все возможные варианты событий для каждой подзадачи.

	Выбираем инструмент, который решает каждую подзадачу и задачу в целом (eсли это работа с массивами данных, то выбираем аллгоритм).

	Описываем решение каждой подзадачи словами и в рамках инструмента.

	Пишем код для каждой подзадачи по описанию.

	Собираем решения всех подзадач вместе.

Как подходить к исправлению ошибки

	Внимательно читаем ошибку.

	Пытаемся понять, где может быть причина.

	Если поняли, то идём исправлять.

	Если не поняли, то идём гуглить.

	Если нашли правильное решение, то обязательно его разобрали и поняли.

Как проектировать бд

	На основани существительных из use_cases определяем сущности.

	Определяем поля каждой сущности.

		Поля, где хранятся id лучше называть с постфиксом id. Например sender_id, потому что так сразу понятно, что за значение находится в поле.

	Выстраиваем связи на основании нормальных форм (один к одному, один ко многим и т.д.)

		Помним о целостности данных, которую обеспечивают foreign_key и cascade.

	На основании запросов задаем индексы.

Как составлять запрос

	Определяем какие поля нужно выбрать.

	Определяем таблицы в которых хранятся нужные нам поля.

	Определяем условие по которому нужно сделать выборку.

	Определям с мощью чего мы можем достигнуть нужный результат (соединение таблиц, агрегация, группировка, подзапросы).

		Что
			
			name, products

		Откуда

			users, products

		Как получить

			Соединение

				JOIN

			Подзапрос

			Группировка

				Объединяет значения в одну строку при совпадении значений в столбцах.

			Агрегация

				MIN, MAX, AVG, COUNT
			
		Условие

			Подзапрос

			Группировка

			Агрегация

	Формат:

		SELECT
			name,
			car
		FROM
			users
		JOIN
			cars
		WHERE
			...

Как выбирать иструмент

	Чем от меньше кол-ва кода сторонних библиотек и их багов я завишу, тем лучше.

Зачем нужны паттерны

	Каждый паттерн решает определённую задачу.

	Большая часть паттернов уже используется во фреймворке.

	Знание паттернов позволяет сделать правильный выбор при решении той или иной задачи.