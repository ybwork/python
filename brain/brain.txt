Оглавление

	Как подходить к решению задачи

	Как подходить к исправлению ошибки

	Как составлять запрос

	Как выбирать иструмент

	Зачем нужны паттерны

Как подходить к решению задачи

	Понимаем задачу. Если могу описать её простыми словами, значит понял.

	Декомпозируем задачу, то есть разбиваем её на более мелкие подзадачи.

	Придумываем решение каждой подзадачи в рамках простых вещей (вспомнить пример с двумя телефонами и паузой).

	Выписываем все возможные варианты событий для каждой подзадачи.

	Выбираем инструмент, который решает каждую подзадачу и задачу в целом (eсли это работа с массивами данных, то выбираем аллгоритм).

	Описываем решение каждой подзадачи словами и в рамках инструмента.

	Пишем код для каждой подзадачи по описанию.

	Собираем решения всех подзадач вместе.

Как составлять запрос

	Определяем какие поля нужно выбрать.

	Определяем таблицы в которых хранятся нужные нам поля.

	Определяем условие по которому нужно сделать выборку.

	Определям с мощью чего мы можем достигнуть нужный результат (соединение таблиц, агрегация, группировка, подзапросы) 

Как выбирать иструмент

	Чем от меньше кол-ва кода сторонних библиотек и их багов я завишу, тем лучше.

Зачем нужны паттерны

	Каждый паттерн решает определённую задачу.

	Большая часть паттернов уже используется во фреймворке.

	Знание паттернов позволяет сделать правильный выбор при решении той или иной задачи.