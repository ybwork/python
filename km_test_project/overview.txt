Торговая площадка

	Создание пользователей системы

		Администратор

			Используем встроенного суперпользователя Django

		Клиенты (продавцы, покупатели)

			Создаёт администратор

			Интерфейс имеет поля:

				Ф.И.О

				Логин

				Пароль

	Статусы сделки

		Добавляет администратор

		Интерфейс имеет поля:

			Статус

	Cумма коммиссии по умолчанию

		Добавляет администратор

		Интерфейс имеет поля:

			Сумма

	Добавление рассчётных счетов

		Добавляют клиенты в личном кабинете

		Под личным кабинетом подразумеваю админку с ограниченными правами

		Интерфейс выводит информацию о клиенте

		Интерфейс имеет поля:

			Рассчётный счёт (#343434)

	Создание "предложения"

		Создаёт клиент в личном кабинете

		Интерфейс имеет поля:

			Название

			Описание

			Цена

			Время на оплату сделки

			Процент, который берёт администратор (по дефолту 5%), клиент не видит

			Статус

	Сделка

		Создаётся автоматически, когда клиент нажимает "купить"

		После нажатия на "купить" клиента перебрасывает на страницу оплаты заказа

	Оплата сделки

		Интерфейс имеет поля:

			Сумма

			Рассчётный счёт

		Если банки продавца-покупателя разные, то выводим итоговую сумму с учётом коммиссии

		1. Получаем процент при переводе, делая запрос к банк клиенту и считаем итоговую сумму

		2. Фоном чекаем проценты при переводе между разными банками и пишем к себе в базу, а потом берём процент из неё

		Условия:

			Клиент может оплатить сделку целиком или частично

			Если оплатил целиком, то сделка переходит в разряд "завершённые"

			Если оплатил частично, то сделка переходит в раздел "в процессе"

		При оплате данные отправляются в банк клиент и происходит процесс снятия-зачисления (в фоновом режиме)

	Если клиент оплатил в последнюю секунду, а банк тупит

		Пишем в бд каждый платёж и выводим пользователю "платёж обрабатывается"

		Платёж имеет поля:

			Идентификатор плательщика

			Время платежа

		Если банк клиент ответил "ок" и оплатил вовремя, то предложение считается оплаченным

Банк клиент

	Аутентификация

		Первым запросом приложение отправляет в банк клиент api_key и номер рассчётного счёта покупателя

		Когда клиент нажал "оплатить", банк должен удостовериться, что это действие действительно от клиента банка

		Банк находит email пользователя (в идеале телефон) по рассчётному счёту и отправляет код подтверждения

		Клиент вводит код и если он совпадает, то выполняется запрашиваемая операция.

	Маска рассчётного счёта

		id банка + os.urandom(5)

		Структуру бд

		Как решить расклад с процентом

	Баланс клиента

		Отдаётся только при прохождении аутентификации

	Снятие-зачисление денежных средств

		Если одинаковые банки, то сняли с одного счёта и зачислили на другой

		Если разные банки, то сначала посчитали процент, а потом сняли-зачислили

		Делается в фоновом режими

		Каждое снятие-зачисление фиксируем (нужно для возврата денег в случае неуплаты в срок)

	Возврат средств

		После снятия-зачисления средст банк клиент генерирует ключ операции и отправляет вместе с ответом в торговую площадку

		Торговая площадка сохраняет этот ключ у себя, связывая его с предложением

		Когда потребуется вернуть все средства по "предложению", мы собирём все ключи транзакции и попросим банк клиент вернуть все деньги обратно клиенту

		------------------------------------------------------------

		При следующем операции зачисления-снятия "торговая площадка" отправляет в "банк клиент" ключ операции и к этой операции добавляется ещё одна сумма

		Что будет если у того, кому перевели деньги, нужно вернуть деньги, а у него их уже нет?

Задачи

	Маска рассчётного счёта

		10 банков

		Банк - 100 клиентов (у каждого не более 100 счетов)

	Добавить баланс

	Продумать систему, когда клиент в последнюю секунду сделал последний платёж, а банк отвечает ему в течении 10 минут. По честному платёж прошёл.

	Админ может изменить дефолтный процент для всех предложений

	Как банк будет идентифицировать что например 1, 8 и 20 транзакция относится к одному платежу, который нужно вернуть?

Черновик

	Создание банков с которыми работает площадка

		Создаёт администратор

		Интерфейс имеет поля:

			Имя

			Реквизит 
		
		Такой же реквизит будет храниться в банк клиенте и мы сможем по нему и рассчётному счёту клиента делать запросы на снятие, зачисление и баланс

	Привязка рассчётных счетов клиентов к банку

		Привязывают клиенты в личном кабинете

		Под личным кабинетом подразумеваю админку с ограниченными правами

		Интерфейс имеет поля:

			Рассчётный счёт

			Банк (выпадающий список)

	Модерация товара

		Проводит администратор

		Интерфейс выводит описание товара

		Интерфейс имеет поля:

			Процент, который берёт администратор

		Только после модерации товар становится доступен






	
	

